name: Deploy to DigitalOcean Droplet

on:
  push:
    branches: [ master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: List directory contents
      run: |
        echo "Root directory:"
        ls -R

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    # Comment out the failing steps for now
    # - name: Restore dependencies
    #   run: dotnet restore super_new_project_blazor_wasm/Super_new_project/Super_new_project.csproj

    # - name: Build
    #   run: dotnet build super_new_project_blazor_wasm/Super_new_project/Super_new_project.csproj --no-restore -c Release

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/super_new_project:latest

    - name: Deploy to DigitalOcean Droplet
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DIGITALOCEAN_HOST }}
        username: ${{ secrets.DIGITALOCEAN_SSH_USER }}
        key: ${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY }}
        passphrase: ${{ secrets.DIGITALOCEAN_SSH_PASSPHRASE }}
        debug: true
        script: |
          echo "Connected successfully"
          docker --version
          docker pull ${{ secrets.DOCKER_USERNAME }}/super_new_project:latest
          docker stop super_new_project || true
          docker rm super_new_project || true
          docker run -d --name super_new_project -p 80:80 ${{ secrets.DOCKER_USERNAME }}/super_new_project:latest
